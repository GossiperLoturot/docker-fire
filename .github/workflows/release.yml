name: Release

on:
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest
          bin-path: target/release/docker-fire
        - os: macos-latest
          bin-path: target/release/docker-fire
        - os: windows-latest
          bin-path: target/release/docker-fire.exe

    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Compile
      run: cargo build --release
    - name: Archive
      id: archive
      shell: bash
      run: |
        NAME=docker-fire-${{ github.ref_name }}-${{ matrix.os }}

        DIR_PATH=$NAME
        mkdir $DIR_PATH
        mv ${{ matrix.bin-path }} $DIR_PATH/

        if ${{ matrix.os == 'windows-latest' }}; then
          ARCHIVE_PATH=$NAME.zip
          7z a $ARCHIVE_PATH $DIR_PATH
        else
          ARCHIVE_PATH=$NAME.tar.gz
          tar -czvf $ARCHIVE_PATH $DIR_PATH
        fi

        echo "path=$ARCHIVE_PATH" >> $GITHUB_OUTPUT
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: assets
        path: ${{ steps.archive.outputs.path }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download
      uses: actions/download-artifact@v3
      with:
        name: assets
        path: assets
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: assets/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
